---
services:
  nginx:
    container_name: nginx
    build: ./nginx
    image: nginx:ft
    restart: always
    depends_on:
      - wordpress
    networks:
      - web
    ports:
      - "127.0.0.1:443:443"
    volumes:
      - wp-data:/var/www/html:ro
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf/http.d:/etc/nginx/http.d:ro
  wordpress:
    container_name: wordpress
    build: ./wordpress
    image: wordpress:ft
    restart: always
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - web
      - backend
    volumes:
      - wp-data:/var/www/html
      - ./wordpress/conf/conf.d/opcache-recommended.ini:/etc/php82/conf.d/opcache-recommended.ini:ro
      - ./wordpress/conf/php-fpm.d/www.conf:/etc/php82/php-fpm.d/www.conf:ro
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000 | grep -q pong
      interval: 5s
      timeout: 5s
    environment:
      - WP_DB_HOST
      - WP_DB_USER
      - WP_DB_PASSWORD
      - WP_DB_NAME
      - WP_URL
      - WP_ADMIN_USER
      - WP_ADMIN_PASSWORD
      - WP_EDITOR_USER
      - WP_EDITOR_PASSWORD
  mariadb:
    container_name: mariadb
    build: ./mariadb
    image: mariadb:ft
    restart: always
    networks:
      - backend
    volumes:
      - db-data:/var/lib/mysql
      - ./mariadb/conf/my.cnf.d/mariadb-server.cnf:/etc/my.cnf.d/mariadb-server.cnf:ro
    healthcheck:
      test: mysqladmin ping --silent -u $DB_USER -p$DB_PASSWORD
      interval: 5s
      timeout: 5s
    environment:
      - DB_USER
      - DB_PASSWORD
      - DB_DATABASE

networks:
  web:
    name: web
  backend:
    name: backend

volumes:
  wp-data:
    name: wp-data
    driver_opts:
      type: none
      o: bind
      device: ${VOL_WP_PATH:?}
  db-data:
    name: db-data
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DB_PATH:?}
